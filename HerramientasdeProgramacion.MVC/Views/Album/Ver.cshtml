@model HerramientasdeProgramacion.Modelos.Album

@{
    ViewData["Title"] = "Álbum: " + Model.Titulo;
    var apiBaseUrl = "https://localhost:7027";
}

<div class="bg-dark text-white p-4 rounded shadow mb-5">
    <div class="d-flex flex-wrap justify-content-between align-items-center mb-4">
        <div class="d-flex align-items-center">
            <div class="bg-secondary d-flex align-items-center justify-content-center rounded me-4" style="width: 180px; height: 180px;">
                <span style="font-size: 3.5rem;">⭐</span>
            </div>
            <div>
                <p class="text-uppercase text-muted fw-bold mb-1">Álbum</p>
                <h1 class="display-6 fw-bold">@Model.Titulo</h1>
                <p class="text-muted mb-0">
                    @Model.AlbumesCanciones?.Count canción(es) • Lanzado el @Model.FechaLanzamiento.ToShortDateString()
                </p>
            </div>
        </div>

        <div class="mt-3 mt-md-0">
            <button class="btn btn-success me-2" onclick="reproducirAlbum(false)">
                <i class="bi bi-play-fill"></i> Reproducir
            </button>
            <button class="btn btn-outline-light" onclick="reproducirAlbum(true)">
                <i class="bi bi-shuffle"></i> Aleatorio
            </button>
        </div>
    </div>

    @if (Model.AlbumesCanciones == null || !Model.AlbumesCanciones.Any())
    {
        <p class="text-muted">Este álbum aún no tiene canciones.</p>
    }
    else
    {
        <div class="table-responsive rounded">
            <table class="table table-dark table-hover align-middle shadow-sm rounded overflow-hidden">
                <thead class="text-muted border-bottom">
                    <tr>
                        <th style="width: 40px;">#</th>
                        <th>Título</th>
                        <th>Artista</th>
                        <th>Reproducciones</th>
                        <th>Duración</th>
                        <th>▶️</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var index = 1;
                    }
                    @foreach (var ac in Model.AlbumesCanciones)
                    {
                        var cancion = ac.Cancion;
                        var artista = cancion?.Artista;
                        var cancionUrl = apiBaseUrl + cancion?.Url;

                        <tr>
                            <td>@index</td>
                            <td>@cancion?.Titulo</td>
                            <td>@artista?.Nombre</td>
                            <td>@cancion?.Reproducciones.ToString("N0")</td>
                            <td>@(cancion?.Duracion != null ? $"{(int)cancion.Duracion.TotalMinutes}:{cancion.Duracion.Seconds:D2}" : "—")</td>
                            <td>
                                <button class="btn btn-outline-light btn-sm"
                                        onclick="reproducirEnBarra('@cancionUrl', '@cancion?.Titulo', '@artista?.Nombre')">
                                    <i class="bi bi-play-circle"></i>
                                </button>
                            </td>
                        </tr>
                        index++;
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<a href="@Url.Action("Index", "Album")" class="btn btn-secondary mb-5">
    <i class="bi bi-arrow-left"></i> Volver a los álbumes
</a>

<!-- Barra inferior fija para el reproductor -->
<div id="barraReproductor"
     class="bg-dark text-white fixed-bottom d-flex align-items-center px-3 py-2"
     style="display:none; height: 70px; box-shadow: 0 -2px 8px rgba(0,0,0,0.7);">

    <div class="flex-grow-1">
        <div id="tituloCancion" class="fw-bold"></div>
        <div id="nombreArtista" class="text-muted small"></div>
    </div>

    <audio id="reproductorGlobal" controls style="width: 300px; max-width: 40vw;">
        Tu navegador no soporta el elemento de audio.
    </audio>
</div>

<script>
    const reproductorGlobal = document.getElementById("reproductorGlobal");
    const barra = document.getElementById("barraReproductor");
    const tituloCancion = document.getElementById("tituloCancion");
    const nombreArtista = document.getElementById("nombreArtista");

    const canciones = [
        @foreach (var ac in Model.AlbumesCanciones)
        {
                var cancion = ac.Cancion;
                var artista = cancion?.Artista;
                var cancionUrl = apiBaseUrl + cancion?.Url;

                <text>
                {
                    url: '@cancionUrl',
                    titulo: '@cancion?.Titulo?.Replace("'", "\\'")',
                    artista: '@artista?.Nombre?.Replace("'", "\\'")'
                },
                </text>
        }
    ];

    let indice = 0;

    function reproducirAlbum(aleatorio) {
        if (canciones.length === 0) return;

        let lista = [...canciones];
        if (aleatorio) {
            lista.sort(() => Math.random() - 0.5);
        }

        indice = 0;
        reproducirCancion(lista[indice], lista);
    }

    function reproducirCancion(cancion, listaActual) {
        reproductorGlobal.src = cancion.url;
        reproductorGlobal.load();
        reproductorGlobal.play();

        tituloCancion.textContent = cancion.titulo;
        nombreArtista.textContent = cancion.artista;

        barra.style.display = "flex";

        // Guardamos lista y canción actual para avanzar luego
        reproductorGlobal.dataset.lista = JSON.stringify(listaActual);
        reproductorGlobal.dataset.indice = indice;
    }

    function reproducirEnBarra(url, titulo, artista) {
        reproductorGlobal.src = url;
        reproductorGlobal.load();
        reproductorGlobal.play();

        tituloCancion.textContent = titulo || "Título desconocido";
        nombreArtista.textContent = artista || "Artista desconocido";

        barra.style.display = "flex";

        // Al reproducir individual, lista con esa única canción
        reproductorGlobal.dataset.lista = JSON.stringify([{ url, titulo, artista }]);
        reproductorGlobal.dataset.indice = 0;
    }

    reproductorGlobal.addEventListener("ended", () => {
        let lista = JSON.parse(reproductorGlobal.dataset.lista || "[]");
        let idx = parseInt(reproductorGlobal.dataset.indice) || 0;
        idx++;
        if (idx < lista.length) {
            indice = idx;
            reproducirCancion(lista[idx], lista);
        }
    });
</script>