// <auto-generated />
using System;
using HerramientasdeProgramacion.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HerramientasdeProgramacion.API.Migrations.SqlServerHdPMigrations
{
    [DbContext(typeof(SqlServerHdPDbContext))]
    [Migration("20250729154957_ApiCorrection")]
    partial class ApiCorrection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaLanzamiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("PortadaUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Albumes");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.AlbumCancion", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("CancionId")
                        .HasColumnType("int");

                    b.HasKey("AlbumId", "CancionId");

                    b.HasIndex("CancionId");

                    b.ToTable("AlbumesCanciones");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.Artista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Biografia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortadaUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artistas");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.Cancion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistaId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Duracion")
                        .HasColumnType("time");

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reproducciones")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArtistaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Canciones");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.FormaPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioId1")
                        .IsUnique()
                        .HasFilter("[UsuarioId1] IS NOT NULL");

                    b.ToTable("FormasPagos");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.Historial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CancionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CancionId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioId1");

                    b.ToTable("Historiales");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.PlayList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsPublica")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioId1");

                    b.ToTable("PlayLists");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.PlayListCancion", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<int>("CancionId")
                        .HasColumnType("int");

                    b.Property<int?>("CancionId1")
                        .HasColumnType("int");

                    b.HasKey("PlaylistId", "CancionId");

                    b.HasIndex("CancionId");

                    b.HasIndex("CancionId1");

                    b.ToTable("PlayListsCanciones");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenPerfilUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.Album", b =>
                {
                    b.HasOne("HerramientasdeProgramacion.Modelos.Usuario", "Artista")
                        .WithMany()
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HerramientasdeProgramacion.Modelos.Usuario", null)
                        .WithMany("Albumes")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Artista");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.AlbumCancion", b =>
                {
                    b.HasOne("HerramientasdeProgramacion.Modelos.Album", "Album")
                        .WithMany("AlbumesCanciones")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HerramientasdeProgramacion.Modelos.Cancion", "Cancion")
                        .WithMany("AlbumesCanciones")
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Cancion");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.Cancion", b =>
                {
                    b.HasOne("HerramientasdeProgramacion.Modelos.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumId");

                    b.HasOne("HerramientasdeProgramacion.Modelos.Artista", "Artista")
                        .WithMany("Canciones")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HerramientasdeProgramacion.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artista");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.FormaPago", b =>
                {
                    b.HasOne("HerramientasdeProgramacion.Modelos.Usuario", "Usuario")
                        .WithMany("FormasPagos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HerramientasdeProgramacion.Modelos.Usuario", null)
                        .WithOne("FormaPago")
                        .HasForeignKey("HerramientasdeProgramacion.Modelos.FormaPago", "UsuarioId1");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.Historial", b =>
                {
                    b.HasOne("HerramientasdeProgramacion.Modelos.Cancion", "Cancion")
                        .WithMany()
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HerramientasdeProgramacion.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HerramientasdeProgramacion.Modelos.Usuario", null)
                        .WithMany("Historiales")
                        .HasForeignKey("UsuarioId1");

                    b.Navigation("Cancion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.PlayList", b =>
                {
                    b.HasOne("HerramientasdeProgramacion.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HerramientasdeProgramacion.Modelos.Usuario", null)
                        .WithMany("PlayLists")
                        .HasForeignKey("UsuarioId1");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.PlayListCancion", b =>
                {
                    b.HasOne("HerramientasdeProgramacion.Modelos.Cancion", "Cancion")
                        .WithMany()
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HerramientasdeProgramacion.Modelos.Cancion", null)
                        .WithMany("PlayListsCanciones")
                        .HasForeignKey("CancionId1");

                    b.HasOne("HerramientasdeProgramacion.Modelos.PlayList", "PlayList")
                        .WithMany("Canciones")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cancion");

                    b.Navigation("PlayList");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.Album", b =>
                {
                    b.Navigation("AlbumesCanciones");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.Artista", b =>
                {
                    b.Navigation("Canciones");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.Cancion", b =>
                {
                    b.Navigation("AlbumesCanciones");

                    b.Navigation("PlayListsCanciones");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.PlayList", b =>
                {
                    b.Navigation("Canciones");
                });

            modelBuilder.Entity("HerramientasdeProgramacion.Modelos.Usuario", b =>
                {
                    b.Navigation("Albumes");

                    b.Navigation("FormaPago");

                    b.Navigation("FormasPagos");

                    b.Navigation("Historiales");

                    b.Navigation("PlayLists");
                });
#pragma warning restore 612, 618
        }
    }
}
